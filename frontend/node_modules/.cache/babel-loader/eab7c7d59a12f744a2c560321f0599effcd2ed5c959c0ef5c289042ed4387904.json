{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Frontend-code\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // State for the selected form type\n  const [formType, setFormType] = useState('');\n\n  // State to hold the fields for the selected form type\n  const [formFields, setFormFields] = useState([]);\n\n  // State to store user input for the form\n  const [formData, setFormData] = useState({});\n\n  // State to track the progress of form completion\n  const [progress, setProgress] = useState(0);\n\n  // State to hold all submitted form data\n  const [submittedData, setSubmittedData] = useState([]);\n\n  // State to display messages for user actions\n  const [message, setMessage] = useState('');\n\n  // Simulated API responses for different form types\n  const apiResponses = {\n    userInformation: {\n      fields: [{\n        name: 'firstName',\n        type: 'text',\n        label: 'First Name',\n        required: true\n      }, {\n        name: 'lastName',\n        type: 'text',\n        label: 'Last Name',\n        required: true\n      }, {\n        name: 'age',\n        type: 'number',\n        label: 'Age',\n        required: false\n      }]\n    },\n    addressInformation: {\n      fields: [{\n        name: 'street',\n        type: 'text',\n        label: 'Street',\n        required: true\n      }, {\n        name: 'city',\n        type: 'text',\n        label: 'City',\n        required: true\n      }, {\n        name: 'state',\n        type: 'dropdown',\n        label: 'State',\n        options: ['California', 'Texas', 'New York'],\n        required: true\n      }, {\n        name: 'zipCode',\n        type: 'text',\n        label: 'Zip Code',\n        required: false\n      }]\n    },\n    paymentInformation: {\n      fields: [{\n        name: 'cardNumber',\n        type: 'text',\n        label: 'Card Number',\n        required: true\n      }, {\n        name: 'expiryDate',\n        type: 'date',\n        label: 'Expiry Date',\n        required: true\n      }, {\n        name: 'cvv',\n        type: 'password',\n        label: 'CVV',\n        required: true\n      }, {\n        name: 'cardholderName',\n        type: 'text',\n        label: 'Cardholder Name',\n        required: true\n      }]\n    }\n  };\n\n  // Effect to load form fields when form type changes\n  useEffect(() => {\n    if (formType) {\n      var _apiResponses$formTyp;\n      setFormFields(((_apiResponses$formTyp = apiResponses[formType]) === null || _apiResponses$formTyp === void 0 ? void 0 : _apiResponses$formTyp.fields) || []); // Fetch fields based on selected form type\n      setFormData({}); // Reset form data\n      setProgress(0); // Reset progress bar\n    }\n  }, [formType]);\n\n  // Handler for form field changes\n  const handleInputChange = (e, field) => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    })); // Update form data\n\n    // Calculate progress as a percentage of completed required fields\n    const completedFields = formFields.filter(field => formData[field.name] || field.name === name);\n    setProgress(completedFields.length / formFields.length * 100);\n  };\n\n  // Form submission handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Validate required fields\n    const requiredFields = formFields.filter(field => field.required);\n    const missingFields = requiredFields.filter(field => !formData[field.name]);\n    if (missingFields.length) {\n      setMessage('Please fill in all required fields.'); // Error message for missing fields\n    } else {\n      setSubmittedData(prevData => [...prevData, formData]); // Add form data to submitted list\n      setFormType(''); // Reset form type\n      setMessage('Form submitted successfully!'); // Success message\n    }\n  };\n\n  // Delete a row from the submitted data table\n  const handleDelete = index => {\n    const updatedData = submittedData.filter((_, i) => i !== index);\n    setSubmittedData(updatedData); // Update state after deletion\n    setMessage('Entry deleted successfully.'); // Deletion feedback\n  };\n\n  // Edit a row from the submitted data table\n  const handleEdit = index => {\n    setFormData(submittedData[index]); // Load data into the form\n    setSubmittedData(prevData => prevData.filter((_, i) => i !== index)); // Remove the entry being edited\n    setMessage('Editing entry...'); // Feedback message\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dynamic Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"formType\",\n          children: \"Choose Form Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"formType\",\n          value: formType,\n          onChange: e => setFormType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"userInformation\",\n            children: \"User Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"addressInformation\",\n            children: \"Address Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"paymentInformation\",\n            children: \"Payment Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), formFields.length > 0 && /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [formFields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: field.name,\n              children: [field.label, \" \", field.required && '*']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this), field.type === 'dropdown' ? /*#__PURE__*/_jsxDEV(\"select\", {\n              id: field.name,\n              name: field.name,\n              value: formData[field.name] || '',\n              onChange: e => handleInputChange(e, field),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 23\n              }, this), field.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: option\n              }, option, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 25\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n              id: field.name,\n              type: field.type,\n              name: field.name,\n              value: formData[field.name] || '',\n              onChange: e => handleInputChange(e, field),\n              required: field.required\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 21\n            }, this)]\n          }, field.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: `${progress}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, this), submittedData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Submitted Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [Object.keys(submittedData[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: key\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: submittedData.map((data, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [Object.values(data).map((value, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n                children: value\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 23\n              }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleEdit(index),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDelete(index),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2024 Dynamic Form App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"7jPFIu69JyPqvRAkD8FH2BUG8YU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","formType","setFormType","formFields","setFormFields","formData","setFormData","progress","setProgress","submittedData","setSubmittedData","message","setMessage","apiResponses","userInformation","fields","name","type","label","required","addressInformation","options","paymentInformation","_apiResponses$formTyp","handleInputChange","e","field","value","target","prevData","completedFields","filter","length","handleSubmit","preventDefault","requiredFields","missingFields","handleDelete","index","updatedData","_","i","handleEdit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","onSubmit","map","option","style","width","Object","keys","key","data","values","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Frontend-code/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nconst App = () => {\n  // State for the selected form type\n  const [formType, setFormType] = useState('');\n  \n  // State to hold the fields for the selected form type\n  const [formFields, setFormFields] = useState([]);\n  \n  // State to store user input for the form\n  const [formData, setFormData] = useState({});\n  \n  // State to track the progress of form completion\n  const [progress, setProgress] = useState(0);\n  \n  // State to hold all submitted form data\n  const [submittedData, setSubmittedData] = useState([]);\n  \n  // State to display messages for user actions\n  const [message, setMessage] = useState('');\n\n  // Simulated API responses for different form types\n  const apiResponses = {\n    userInformation: {\n      fields: [\n        { name: 'firstName', type: 'text', label: 'First Name', required: true },\n        { name: 'lastName', type: 'text', label: 'Last Name', required: true },\n        { name: 'age', type: 'number', label: 'Age', required: false },\n      ],\n    },\n    addressInformation: {\n      fields: [\n        { name: 'street', type: 'text', label: 'Street', required: true },\n        { name: 'city', type: 'text', label: 'City', required: true },\n        { name: 'state', type: 'dropdown', label: 'State', options: ['California', 'Texas', 'New York'], required: true },\n        { name: 'zipCode', type: 'text', label: 'Zip Code', required: false },\n      ],\n    },\n    paymentInformation: {\n      fields: [\n        { name: 'cardNumber', type: 'text', label: 'Card Number', required: true },\n        { name: 'expiryDate', type: 'date', label: 'Expiry Date', required: true },\n        { name: 'cvv', type: 'password', label: 'CVV', required: true },\n        { name: 'cardholderName', type: 'text', label: 'Cardholder Name', required: true },\n      ],\n    },\n  };\n\n  // Effect to load form fields when form type changes\n  useEffect(() => {\n    if (formType) {\n      setFormFields(apiResponses[formType]?.fields || []); // Fetch fields based on selected form type\n      setFormData({}); // Reset form data\n      setProgress(0); // Reset progress bar\n    }\n  }, [formType]);\n\n  // Handler for form field changes\n  const handleInputChange = (e, field) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({ ...prevData, [name]: value })); // Update form data\n\n    // Calculate progress as a percentage of completed required fields\n    const completedFields = formFields.filter((field) => formData[field.name] || field.name === name);\n    setProgress((completedFields.length / formFields.length) * 100);\n  };\n\n  // Form submission handler\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Validate required fields\n    const requiredFields = formFields.filter((field) => field.required);\n    const missingFields = requiredFields.filter((field) => !formData[field.name]);\n\n    if (missingFields.length) {\n      setMessage('Please fill in all required fields.'); // Error message for missing fields\n    } else {\n      setSubmittedData((prevData) => [...prevData, formData]); // Add form data to submitted list\n      setFormType(''); // Reset form type\n      setMessage('Form submitted successfully!'); // Success message\n    }\n  };\n\n  // Delete a row from the submitted data table\n  const handleDelete = (index) => {\n    const updatedData = submittedData.filter((_, i) => i !== index);\n    setSubmittedData(updatedData); // Update state after deletion\n    setMessage('Entry deleted successfully.'); // Deletion feedback\n  };\n\n  // Edit a row from the submitted data table\n  const handleEdit = (index) => {\n    setFormData(submittedData[index]); // Load data into the form\n    setSubmittedData((prevData) => prevData.filter((_, i) => i !== index)); // Remove the entry being edited\n    setMessage('Editing entry...'); // Feedback message\n  };\n\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>Dynamic Form</h1>\n      </header>\n      <main>\n        <div className=\"form-container\">\n          {/* Dropdown to select form type */}\n          <label htmlFor=\"formType\">Choose Form Type:</label>\n          <select\n            id=\"formType\"\n            value={formType}\n            onChange={(e) => setFormType(e.target.value)}\n          >\n            <option value=\"\">-- Select --</option>\n            <option value=\"userInformation\">User Information</option>\n            <option value=\"addressInformation\">Address Information</option>\n            <option value=\"paymentInformation\">Payment Information</option>\n          </select>\n\n          {/* Render form fields dynamically */}\n          {formFields.length > 0 && (\n            <form onSubmit={handleSubmit}>\n              {formFields.map((field) => (\n                <div key={field.name} className=\"form-field\">\n                  <label htmlFor={field.name}>\n                    {field.label} {field.required && '*'}\n                  </label>\n                  {field.type === 'dropdown' ? (\n                    <select\n                      id={field.name}\n                      name={field.name}\n                      value={formData[field.name] || ''}\n                      onChange={(e) => handleInputChange(e, field)}\n                    >\n                      <option value=\"\">-- Select --</option>\n                      {field.options.map((option) => (\n                        <option key={option} value={option}>\n                          {option}\n                        </option>\n                      ))}\n                    </select>\n                  ) : (\n                    <input\n                      id={field.name}\n                      type={field.type}\n                      name={field.name}\n                      value={formData[field.name] || ''}\n                      onChange={(e) => handleInputChange(e, field)}\n                      required={field.required}\n                    />\n                  )}\n                </div>\n              ))}\n              {/* Progress bar for form completion */}\n              <div className=\"progress-bar\">\n                <div style={{ width: `${progress}%` }}></div>\n              </div>\n              <button type=\"submit\">Submit</button>\n            </form>\n          )}\n        </div>\n\n        {/* Display feedback message */}\n        {message && <p className=\"message\">{message}</p>}\n\n        {/* Display submitted data in tabular format */}\n        {submittedData.length > 0 && (\n          <div className=\"data-table\">\n            <h2>Submitted Data</h2>\n            <table>\n              <thead>\n                <tr>\n                  {Object.keys(submittedData[0]).map((key) => (\n                    <th key={key}>{key}</th>\n                  ))}\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {submittedData.map((data, index) => (\n                  <tr key={index}>\n                    {Object.values(data).map((value, i) => (\n                      <td key={i}>{value}</td>\n                    ))}\n                    <td>\n                      <button onClick={() => handleEdit(index)}>Edit</button>\n                      <button onClick={() => handleDelete(index)}>Delete</button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </main>\n      <footer>\n        <p>&copy; 2024 Dynamic Form App</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}